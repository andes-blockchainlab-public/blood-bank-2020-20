version: '2.1'

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - '2181:2181'
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - zookeeper_data:/data
      - zookeeper_data_log:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zoo1

      #https://hub.docker.com/_/mongo
    # mongo:
    #  image: mongo:4.2.7
    # restart: always
    # ports:
    #  - 27017:27017
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: example
    #  MONGO_INITDB_DATABASE: mydb
    #volumes:
    # - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

    #https://hub.docker.com/_/mongo-express
    #  mongo-express:
    #    image: mongo-express:0.54.0
    #    restart: always
    #    ports:
    #      - 8081:8081
    #    environment:
    #      ME_CONFIG_MONGODB_SERVER: mongo
    #      ME_CONFIG_MONGODB_ADMINUSERNAME: root
    #      ME_CONFIG_MONGODB_ADMINPASSWORD: example

    #Sawtooth----------------------------------

  settings-tp:
    image: hyperledger/sawtooth-settings-tp:chime
    container_name: sawtooth-settings-tp-default
    depends_on:
      - validator
    entrypoint: settings-tp -vv -C tcp://validator:4004

    # intkey-tp:
    #   build:
    #     context: ./tp
    #     dockerfile: Dockerfile
    #   image: le999/intkey-tp:1.0
    #   container_name: sawtooth-intkey-tp-js-default
    #   environment:
    #     - VALIDATOR=tcp://validator:4004
    #   depends_on:
    #     - validator

    # intkey-tp-python:
    #   image: hyperledger/sawtooth-intkey-tp-python:chime
    #   container_name: sawtooth-intkey-tp-python-default
    #   depends_on:
    #     - validator
    #   entrypoint: intkey-tp-python -vv -C tcp://validator:4004

    #xo-tp-python:
    #image: hyperledger/sawtooth-xo-tp-python:chime
    #container_name: sawtooth-xo-tp-python-default
    #depends_on:
    #- validator
    #entrypoint: xo-tp-python -vv -C tcp://validator:4004

  validator:
    image: hyperledger/sawtooth-validator:chime
    container_name: sawtooth-validator-default
    expose:
      - 4004
    ports:
      - '4004:4004'
    # start the validator with an empty genesis batch
    entrypoint: "bash -c \"\
      sawadm keygen && \
      sawtooth keygen my_key && \
      sawset genesis -k /root/.sawtooth/keys/my_key.priv && \
      sawset proposal create \
      -k /root/.sawtooth/keys/my_key.priv \
      sawtooth.consensus.algorithm.name=Devmode \
      sawtooth.consensus.algorithm.version=0.1 \
      -o config.batch && \
      sawadm genesis config-genesis.batch config.batch && \
      sawtooth-validator -vv \
      --endpoint tcp://validator:8800 \
      --bind component:tcp://eth0:4004 \
      --bind network:tcp://eth0:8800 \
      --bind consensus:tcp://eth0:5050 \
      \""

  devmode-engine:
    image: hyperledger/sawtooth-devmode-engine-rust:chime
    container_name: sawtooth-devmode-engine-rust-default
    depends_on:
      - validator
    entrypoint: devmode-engine-rust -C tcp://validator:5050

  rest-api:
    image: hyperledger/sawtooth-rest-api:chime
    container_name: sawtooth-rest-api-default
    ports:
      - '8008:8008'
    depends_on:
      - validator
    entrypoint: sawtooth-rest-api -C tcp://validator:4004 --bind rest-api:8008

  shell:
    image: hyperledger/sawtooth-shell:chime
    container_name: sawtooth-shell-default
    depends_on:
      - rest-api
    entrypoint: "bash -c \"\
      sawtooth keygen && \
      tail -f /dev/null \
      \""

volumes:
  zookeeper_data:
    # driver: local
  zookeeper_data_log:
    # driver: local
  kafka_data:
    # driver: local
